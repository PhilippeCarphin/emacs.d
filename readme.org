* Minimalistic starter config for emacs

This config aims to be a minimalistic git repo with starter config for emacs.

The idea is that you can use this to start your own repo for tracking your
emacs config.  It also comes with a starter config that has the bare minimum
plus helm and which-key since they are essential to learning emacs.

** Install

#+begin_src shell
git clone https://github.com/philippecarphin/emacs.d ~/.emacs.d
#+end_src

** Usage

Start emacs.  The config uses =(use-package _ :ensure t)= to download
packages if needed.

** Daemon

You can't have multiple instances of VSCode running at the same time.  You can
have multiple windows with multiple tabs.

Emacs' startup time makes it worth taking the steps to make it work like this
because all you have to do is to start emacs in a shell with the =--daemon=
option.

Then to edit files in Emacs or open up a new emacs window, we just do
=emacsclient $my_file= or =emacsclient -c= to create a new frame.


We can launch [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html][Emacs as a server]]:
#+begin_src shell :results error
emacs --daemon 2>&1
#+end_src

#+RESULTS:
#+begin_example
Loading /Users/pcarphin/.emacs.d/config.el (source)...
[yas] Prepared just-in-time loading of snippets successfully.
Loading /Users/pcarphin/.emacs.d/config.el (source)...done
Loaded ~/.emacs.d/config.el
Turning on magit-auto-revert-mode...
Turning on magit-auto-revert-mode...done
Starting Emacs daemon.
You can use emacsclient to connect to that Emacs process.
#+end_example

I have a wrapper that pretty much does =emacsclient $@= with the exception that
the following options bypass this and do something different:

| =ec -s= | =emacs --daemon=                                | Start the emacs daemon                |
| =ec -k= | =emacsclient -c -e '(save-buffers-kill-emacs)'= | Prompt to save buffers and kill emacs |
| =ec -K= |                                                 | Kill emacs by PID                     |

Otherwise, launch emacsclient with forwarded arguments:

| =ec ~/.emacs.d/config.org= | =emacsclient ~/.emacs.d/config.org= | Open file with emacsclient |

I do =ln -s ~/.emacs.d/ec.sh ~/.local/bin/ec= and =~/.local/bin= is in my
=$PATH=.


** Functionning

At startup, emacs reads =~/.emacs.d/init.el= which delegates to
=~/.emacs.d/config.org= via the =org-babel-load-file= function.

Orgmode SRC blocks in the =emacs-lisp= language are extracted into
=~/.emacs.d/config.el= (unless they have the =:tangle no= property) and the
file is executed.

** Evil mode

If evil mode is desired, change the =:tangle no= to =:tangle yes= in the
=evil-mode= section of =~/.emacs.d/config.org=.

** Further configuration

Continue adding sections and emacs LISP SRC blocks.

Anywhere in emacs, =C-x C-e= will run the expression before the cursor.  This
way, you can add to =config.org= and see the effects without reloading Emacs.

In orgmode, doing =C-c C-c= while on an SRC block will evaluate the entire
block.

Make commits and push to your fork of this repo to sync your config between
computers
